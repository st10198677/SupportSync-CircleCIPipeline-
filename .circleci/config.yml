# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define jobs
jobs:
  say-hello:
    # Specify the execution environment
    docker:
      - image: cimg/base:current

    steps:
      # Checkout the code
      - checkout

      # Run a basic "Hello World" command
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  sonarqube-analysis:
    # Specify the execution environment
    docker:
      - image: cimg/openjdk:17.0  # Use OpenJDK 17 for Android development

    working_directory: ~/project  # Define the working directory

    steps:
      # Step 1: Checkout the code
      - checkout

      # Step 2: Grant execute permissions for Gradle wrapper
      - run:
          name: Grant execute permission for gradlew
          command: chmod +x ./gradlew

      # Step 3: Build the project
      - run:
          name: Build the project
          command: ./gradlew build --info --stacktrace

      # Step 4: Run SonarQube analysis
      - run:
          name: Analyze with SonarQube
          command: |
            sonar-scanner \
              -Dsonar.projectKey=com.example.assetsync \
              -Dsonar.organization=<YourOrganizationKey> \
              -Dsonar.host.url=$SONAR_HOST_URL \
              -Dsonar.login=$SONAR_TOKEN \
              -Dsonar.sources=app/src/main/java \
              -Dsonar.tests=app/src/test/java,app/src/androidTest/java \
              -Dsonar.java.binaries=app/build \
              -Dsonar.android.lint.reportPaths=app/build/reports/lint-results.xml \
              -Dsonar.junit.reportPaths=app/build/test-results/test \
              -Dsonar.coverage.jacoco.xmlReportPaths=app/build/reports/jacoco/test/jacocoTestReport.xml

# Workflows
workflows:
  main-workflow:
    jobs:
      - say-hello
      - sonarqube-analysis
